<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Klaus Laube - prototype</title><link>https://klauslaube.com.br/</link><description>Python, Django e desenvolvimento Web</description><lastBuildDate>Sun, 23 Oct 2011 15:07:00 -0200</lastBuildDate><item><title>Javascript: A diferença entre Constructor Function e Object Literal</title><link>https://klauslaube.com.br/2011/10/23/javascript-constructor-function-object-literal.html</link><description>&lt;p&gt;Meses atrás, &lt;a href="https://klauslaube.com.br/2011/05/16/fazendo-javascript-oo-de-forma-facil.html" title="Fazendo Javascript OO de forma fácil"&gt;escrevi sobre como era fácil criar objetos em &lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt;.
Devo confessar que, a minha visão sobre a utilização da &lt;a href="https://klauslaube.com.br/tag/oop.html" title="Leia mais sobre OOP"&gt;Orientação a Objetos&lt;/a&gt;
em &lt;a href="https://klauslaube.com.br/tag/javascript.html" title="Leia mais sobre Javascript"&gt;&lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt; era muito superficial, e que uma dúvida muito pertinente
surgiu na época: Onde usar &lt;em&gt;object literal&lt;/em&gt; e onde usar classes?&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Hoje, depois de entender …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Sun, 23 Oct 2011 15:07:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2011-10-23:/2011/10/23/javascript-constructor-function-object-literal.html</guid><category>desenvolvimento</category><category>javascript</category><category>prototype</category><category>oop</category><category>web</category></item></channel></rss>