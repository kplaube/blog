<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Klaus Laube - javascript</title><link>https://klauslaube.com.br/</link><description>Python, Django e desenvolvimento Web</description><lastBuildDate>Sat, 12 Jan 2019 10:55:00 -0200</lastBuildDate><item><title>Deixe darem pitaco no seu código com Prettier</title><link>https://klauslaube.com.br/2019/01/12/deixe-darem-pitaco-no-seu-codigo-com-prettier.html</link><description>&lt;p&gt;&lt;em&gt;Code formatters&lt;/em&gt; são uma boa ideia. Acredite! Demorei a dar o braço a torcer,
mas depois de alguns "Hello world" em &lt;a href="https://golang.org/" title="Leia mais sobre Golang"&gt;&lt;em&gt;Go&lt;/em&gt;&lt;/a&gt;
admito que a ideia de ter um código bem formatado, sem necessitar da destreza do
programador para isso, é uma ideia excelente.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Em &lt;em&gt;Go&lt;/em&gt; temos o &lt;code&gt;go fmt …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Sat, 12 Jan 2019 10:55:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2019-01-12:/2019/01/12/deixe-darem-pitaco-no-seu-codigo-com-prettier.html</guid><category>desenvolvimento</category><category>web</category><category>formatters</category><category>editores</category><category>prettier</category><category>javascript</category><category>html</category><category>css</category></item><item><title>Eu me rendo: VS Code</title><link>https://klauslaube.com.br/2018/06/04/eu-me-rendo-vscode.html</link><description>&lt;p&gt;É, caro leitor... chegou o dia de admitir que tenho usado outro editor
além do &lt;a href="https://klauslaube.com.br/tag/vim.html" title="Leia mais sobre o melhor editor do universo"&gt;&lt;em&gt;Vim&lt;/em&gt;&lt;/a&gt;. Pode
me julgar, me chamar de "poser" ou de "vendido", mas acontece que tenho descoberto no
&lt;a href="https://code.visualstudio.com/" title="Conheça o VS Code"&gt;&lt;em&gt;VS Code&lt;/em&gt;&lt;/a&gt;, da &lt;em&gt;Microsoft&lt;/em&gt;,
uma excelente ferramenta para desenvolvimento &lt;a href="https://klauslaube.com.br/tag/web.html" title="Leia mais sobre web"&gt;&lt;em&gt;web&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Piadas à parte, ainda acho o &lt;em&gt;Vim&lt;/em&gt; uma …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Mon, 04 Jun 2018 16:30:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2018-06-04:/2018/06/04/eu-me-rendo-vscode.html</guid><category>desenvolvimento</category><category>web</category><category>editores</category><category>ide</category><category>vscode</category><category>vim</category><category>python</category><category>css</category><category>javascript</category><category>eu-me-rendo</category></item><item><title>Django e ES6 com django-compressor</title><link>https://klauslaube.com.br/2016/06/20/django-e-es6-com-django-compressor.html</link><description>&lt;p&gt;No &lt;a href="https://klauslaube.com.br/2016/06/04/django-e-sass-com-django-compressor.html" title="Django e Sass com django-compressor"&gt;&lt;em&gt;post&lt;/em&gt; anterior&lt;/a&gt;,
falamos sobre como utilizar o &lt;a href="https://klauslaube.com.br/tag/sass.html" title="Leia mais sobre Sass"&gt;&lt;em&gt;Sass&lt;/em&gt;&lt;/a&gt;
com o &lt;em&gt;framework&lt;/em&gt; &lt;a href="https://klauslaube.com.br/tag/django.html" title="Leia mais sobre Django"&gt;&lt;em&gt;Django&lt;/em&gt;&lt;/a&gt;
através da biblioteca &lt;em&gt;Compressor&lt;/em&gt; (e sem necessitar de uma
ferramenta intermediária para &lt;em&gt;build&lt;/em&gt;). Nesse artigo, vamos utilizar
o mesmo conceito e apresentar uma forma diferente de utilizar
a nova versão do &lt;a href="https://klauslaube.com.br/tag/javascript.html" title="Leia mais sobre Javascript"&gt;&lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt;
com o &lt;code&gt;django-compressor&lt;/code&gt;.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;Instalando e …&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Mon, 20 Jun 2016 23:04:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2016-06-20:/2016/06/20/django-e-es6-com-django-compressor.html</guid><category>desenvolvimento</category><category>web</category><category>python</category><category>django</category><category>es6</category><category>javascript</category><category>babel</category><category>browserify</category></item><item><title>Fazendo Javascript OO de forma fácil - Parte 2</title><link>https://klauslaube.com.br/2016/03/15/fazendo-javascript-oo-de-forma-facil-parte-2.html</link><description>&lt;p&gt;Há cerca de 5 anos, fiz um &lt;em&gt;post&lt;/em&gt; sobre como escrever
&lt;a href="https://klauslaube.com.br/2011/05/16/fazendo-javascript-oo-de-forma-facil.html" title="Leia o artigo completo"&gt;Javascript OO de forma fácil&lt;/a&gt;
utilizando a orientação a objetos da linguagem através de
&lt;a href="https://klauslaube.com.br/2011/10/23/javascript-constructor-function-object-literal.html" title="Diferença entre Constructor Function e Object Literal"&gt;&lt;em&gt;Constructor Functions&lt;/em&gt; e &lt;em&gt;Object Literal&lt;/em&gt;&lt;/a&gt;.
Hoje, com o &lt;em&gt;ES6&lt;/em&gt;, o esquema de &lt;em&gt;Prototype&lt;/em&gt; ainda continua,
mas a sintaxe ficou muito mais fácil e intuitiva, valendo …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Tue, 15 Mar 2016 13:20:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2016-03-15:/2016/03/15/fazendo-javascript-oo-de-forma-facil-parte-2.html</guid><category>desenvolvimento</category><category>web</category><category>javascript</category><category>es6</category><category>oop</category></item><item><title>Vivendo sem o Grunt</title><link>https://klauslaube.com.br/2016/02/22/vivendo-sem-o-grunt.html</link><description>&lt;p&gt;No meu primeiro contato com o &lt;em&gt;Grunt&lt;/em&gt;, ele não me convenceu. Qual era a
necessidade de um &lt;em&gt;task runner&lt;/em&gt; se eu já tinha o &lt;code&gt;Makefile&lt;/code&gt;? O mesmo valia
para o &lt;em&gt;build&lt;/em&gt; de estáticos... &lt;em&gt;Frameworks&lt;/em&gt; como o &lt;em&gt;Django&lt;/em&gt; já possuíam um
&lt;em&gt;pipeline&lt;/em&gt; de concatenação e minificação, não sendo necessário que um …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Mon, 22 Feb 2016 12:35:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2016-02-22:/2016/02/22/vivendo-sem-o-grunt.html</guid><category>desenvolvimento</category><category>web</category><category>javascript</category><category>node</category><category>npm</category><category>grunt</category></item><item><title>Opinião: Imersão Javascript - e-Genial</title><link>https://klauslaube.com.br/2012/05/29/opiniao-imersao-javascript-e-genial.html</link><description>&lt;p&gt;Para inaugurar a série
&lt;a href="https://klauslaube.com.br/tag/opiniao.html" title="Veja outras opiniões minhas sobre livros e cursos"&gt;Opinião&lt;/a&gt;, onde pretendo expor algumas “críticas” sobre cursos,
eventos e livros técnicos, quero compartilhar com vocês a experiência
que tive com o curso &lt;a href="http://www.edukee.com/pt/curso/javascript/turma-b/1326888846" title="Conheça a grade do curso"&gt;Imersão &lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt;, ministrado pela
&lt;a href="http://www.egenial.com/" title="Cursos online para desenvolvedores e empreendedores Web"&gt;e-Genial&lt;/a&gt;.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Antes de qualquer coisa, tenho a obrigação de dizer: O ambiente de
educação à distância, chamado &lt;a href="http://www.treinatom.com.br/pt/" title="Conheço o ambiente Ead da e-Genial"&gt;&lt;em&gt;TreinaTom&lt;/em&gt;&lt;/a&gt;, é …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Tue, 29 May 2012 22:09:07 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2012-05-29:/2012/05/29/opiniao-imersao-javascript-e-genial.html</guid><category>opiniao</category><category>javascript</category><category>curso</category></item><item><title>Javascript: A diferença entre Constructor Function e Object Literal</title><link>https://klauslaube.com.br/2011/10/23/javascript-constructor-function-object-literal.html</link><description>&lt;p&gt;Meses atrás, &lt;a href="https://klauslaube.com.br/2011/05/16/fazendo-javascript-oo-de-forma-facil.html" title="Fazendo Javascript OO de forma fácil"&gt;escrevi sobre como era fácil criar objetos em &lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt;.
Devo confessar que, a minha visão sobre a utilização da &lt;a href="https://klauslaube.com.br/tag/oop.html" title="Leia mais sobre OOP"&gt;Orientação a Objetos&lt;/a&gt;
em &lt;a href="https://klauslaube.com.br/tag/javascript.html" title="Leia mais sobre Javascript"&gt;&lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt; era muito superficial, e que uma dúvida muito pertinente
surgiu na época: Onde usar &lt;em&gt;object literal&lt;/em&gt; e onde usar classes?&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Hoje, depois de entender …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Sun, 23 Oct 2011 15:07:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2011-10-23:/2011/10/23/javascript-constructor-function-object-literal.html</guid><category>desenvolvimento</category><category>javascript</category><category>prototype</category><category>oop</category><category>web</category></item><item><title>Afinal, o que são Closures?</title><link>https://klauslaube.com.br/2011/05/29/afinal-o-que-sao-closures.html</link><description>&lt;p&gt;Sabem aqueles conceitos, que a gente sempre utiliza e chega alguém com
um nome “pomposo” para a parada (que você nunca ouviu falar)? Isso
aconteceu comigo com &lt;em&gt;closures&lt;/em&gt;.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;What (the hell) are closures?&lt;/h2&gt;
&lt;p&gt;Entendi o conceito de &lt;em&gt;closures&lt;/em&gt; enquanto estudava &lt;em&gt;Ruby&lt;/em&gt;. Na verdade,
fica a dica… se você quer aprender …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Sun, 29 May 2011 13:52:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2011-05-29:/2011/05/29/afinal-o-que-sao-closures.html</guid><category>desenvolvimento</category><category>closures</category><category>oop</category><category>javascript</category></item><item><title>Fazendo Javascript OO de forma fácil</title><link>https://klauslaube.com.br/2011/05/16/fazendo-javascript-oo-de-forma-facil.html</link><description>&lt;p&gt;Embora o &lt;em&gt;Javascript&lt;/em&gt; (em sua essência) seja orientado a objetos, temos
que admitir que ela foge um pouco do convencional através do estilo de
escrita &lt;em&gt;&lt;em&gt;prototype&lt;/em&gt;&lt;/em&gt;. Quero dizer que, é possível utilizarmos
conceitos como encapsulamento, herança, atributos e métodos públicos e
privados, etc. Mas de uma maneira um pouco diferente …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Mon, 16 May 2011 22:27:00 -0300</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2011-05-16:/2011/05/16/fazendo-javascript-oo-de-forma-facil.html</guid><category>desenvolvimento</category><category>web</category><category>javascript</category><category>oop</category></item><item><title>As camadas do desenvolvimento Web</title><link>https://klauslaube.com.br/2011/02/16/camadas-desenvolvimento-web.html</link><description>&lt;p&gt;Se eu aprendi alguma coisa com o &lt;em&gt;xHTML&lt;/em&gt;, foi:
Separar marcação, estilos e comportamento tornam a sua vida muito mais
feliz.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Assim como tratando-se de &lt;a href="https://klauslaube.com.br/tag/acessibilidade.html" title="Leia mais sobre Acessibilidade"&gt;acessibilidade&lt;/a&gt;, quando falamos em “camadas
de desenvolvimento &lt;a href="https://klauslaube.com.br/tag/web.html" title="Leia mais sobre Web"&gt;&lt;em&gt;web&lt;/em&gt;&lt;/a&gt;“, estamos (a grosso modo) falando de
semântica. E nisso, o &lt;a href="https://klauslaube.com.br/tag/html5.html" title="Leia mais sobre HTML5"&gt;&lt;em&gt;HTML5&lt;/em&gt;&lt;/a&gt; vem nos presenteando com &lt;em&gt;tags&lt;/em&gt;
supimpas …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Wed, 16 Feb 2011 16:09:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2011-02-16:/2011/02/16/camadas-desenvolvimento-web.html</guid><category>desenvolvimento</category><category>web</category><category>html</category><category>css</category><category>javascript</category><category>acessibilidade</category></item><item><title>Garantindo acessibilidade com Javascript não obstrusivo</title><link>https://klauslaube.com.br/2010/11/18/acessibilidade-javascript-nao-obstrusivo.html</link><description>&lt;p&gt;Em épocas onde &lt;em&gt;RIA&lt;/em&gt; está cada vez mais comum, e as interfaces &lt;a href="https://klauslaube.com.br/tag/web.html" title="Leia mais sobre Web"&gt;&lt;em&gt;web&lt;/em&gt;&lt;/a&gt; resolveram
parecer-se cada vez mais com ambientes &lt;em&gt;desktops&lt;/em&gt;, tenho reparado um
grande movimento a favor da acessibilidade, afinal, como bons
profissionais que somos temos que garantir que a informação que estamos
disponibilizando seja acessada por uma gama …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Klaus Peter Laube</dc:creator><pubDate>Thu, 18 Nov 2010 09:00:00 -0200</pubDate><guid isPermaLink="false">tag:klauslaube.com.br,2010-11-18:/2010/11/18/acessibilidade-javascript-nao-obstrusivo.html</guid><category>desenvolvimento</category><category>web</category><category>javascript</category><category>acessibilidade</category></item></channel></rss>