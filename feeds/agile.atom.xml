<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Klaus Laube - agile</title><link href="https://klauslaube.com.br/" rel="alternate"></link><link href="https://klauslaube.com.br/feeds/agile.atom.xml" rel="self"></link><id>https://klauslaube.com.br/</id><updated>2010-12-09T12:53:00-02:00</updated><subtitle>Python, Django e desenvolvimento Web</subtitle><entry><title>SCRUM: Como encontrei a felicidade gerenciando prazos</title><link href="https://klauslaube.com.br/2010/12/09/scrum-como-encontrei-felicidade-gerenciando-prazos.html" rel="alternate"></link><published>2010-12-09T12:53:00-02:00</published><updated>2010-12-09T12:53:00-02:00</updated><author><name>Klaus Peter Laube</name></author><id>tag:klauslaube.com.br,2010-12-09:/2010/12/09/scrum-como-encontrei-felicidade-gerenciando-prazos.html</id><summary type="html">&lt;p&gt;Eu como desenvolvedor nunca tive real interesse em
gerência de projetos, o que fatalmente resultava em projetos de
qualidade duvidosa e fora de prazo. Devo confidenciar que até hoje não
tenho interesse no modelo “tradicional” de gerenciar projetos de
&lt;em&gt;software&lt;/em&gt;, mas a preocupação com a qualidade, prazos e escopo acabou …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Eu como desenvolvedor nunca tive real interesse em
gerência de projetos, o que fatalmente resultava em projetos de
qualidade duvidosa e fora de prazo. Devo confidenciar que até hoje não
tenho interesse no modelo “tradicional” de gerenciar projetos de
&lt;em&gt;software&lt;/em&gt;, mas a preocupação com a qualidade, prazos e escopo acabou
por fazer parte do meu cotidiano quando abri minha própria empresa de
desenvolvimento.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;&lt;em&gt;Startups&lt;/em&gt; geralmente são compostas por equipes pequenas, e estas
devem ser &lt;strong&gt;multidisciplinares&lt;/strong&gt;. Acredito que o “desenvolvedor
&lt;a href="https://klauslaube.com.br/tag/web.html" title="Leia mais sobre Web"&gt;&lt;em&gt;web&lt;/em&gt;&lt;/a&gt;” atualmente é mais do que aquele “feijão com arroz” do início
dos anos 2000. Hoje temos a obrigação de saber o mínimo possível de cada
área de conhecimento que envolve o desenvolvimento de &lt;em&gt;software&lt;/em&gt;: desde
&lt;em&gt;design&lt;/em&gt; de interfaces à modelagem de entidades e relacionamentos em um
banco de dados (ou seja, verdadeiros Engenheiros de &lt;em&gt;Software&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Um dia eu disse “chega” ao caos, e decidi que meus projetos de agora em
diante deveriam possuir prazos bem definidos e acima de tudo
qualidade. O meu primeiro passo foi procurar ferramentas, e esse foi
o meu maior erro. Não se trata de ferramentas ou processos… &lt;strong&gt;trata-se
de pessoas e atitude!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eu me sinto na obrigação de falar sobre &lt;a href="https://klauslaube.com.br/tag/scrum.html" title="Leia mais sobre Scrum"&gt;&lt;em&gt;Scrum&lt;/em&gt;&lt;/a&gt; antes mesmo de falar
sobre camadas de desenvolvimento &lt;em&gt;web&lt;/em&gt;, ambientes de desenvolvimento
&lt;a href="https://klauslaube.com.br/tag/python.html" title="Leia mais sobre Python"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; / &lt;a href="https://klauslaube.com.br/tag/django.html" title="Leia mais sobre Django"&gt;&lt;em&gt;Django&lt;/em&gt;&lt;/a&gt;, ou sobre testes automatizados.&lt;/p&gt;
&lt;h2&gt;Trata-se de pessoas…&lt;/h2&gt;
&lt;p&gt;Se você não sabe o que é &lt;em&gt;Scrum&lt;/em&gt;, recomendo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Primeiramente assitir ao vídeo “&lt;a href="http://www.youtube.com/watch?v=Q5k7a9YEoUI&amp;amp;feature=player_embedded" title="Aprenda Scrum em 10 minutos no Youtube"&gt;&lt;em&gt;Scrum under 10 minutes&lt;/em&gt;&lt;/a&gt;“;&lt;/li&gt;
&lt;li&gt;Após esta divertida introdução, ver &lt;em&gt;Scrum&lt;/em&gt; no mundo real assistindo
    ao &lt;a href="http://remoteprocedurecall.wordpress.com/2009/05/22/scrum-na-globo/" title="Scrum na Globo.com"&gt;depoimento sobre como ele é usado na &lt;em&gt;Globo.com&lt;/em&gt;&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Por fim, recomendo ler o &lt;em&gt;e-book&lt;/em&gt; “&lt;a href="http://www.infoq.com/minibooks/scrum-xp-from-the-trenches" title="Faça download do e-book. Necessário cadastro"&gt;&lt;em&gt;Scrum&lt;/em&gt; e &lt;em&gt;XP&lt;/em&gt; direto das
    trincheiras&lt;/a&gt;” (sem dúvida a minha refência favorita sobre Scrum).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img class="align-center-keep-size" src="/images/blog/scrum.jpg" width="416" height="300" title="Formação Scrum, no Rugby" alt="Formação Scrum, no Rugby"&gt;&lt;/p&gt;
&lt;p&gt;Posso afirmar que o grande lance do
&lt;em&gt;Scrum&lt;/em&gt; é &lt;strong&gt;aproximar as pessoas envolvidas em um projeto&lt;/strong&gt; removendo o
que não importa. É tirá-las de baias, fazê-las pararem de ficar enviando
&lt;em&gt;e-mails&lt;/em&gt; umas para as outras, botar estas pessoas numa sala e fazer com
que se conversem como seres humanos normais.&lt;/p&gt;
&lt;p&gt;Particularmente, detesto o &lt;em&gt;face-to-face&lt;/em&gt;. Mas me aproximar do cliente
foi uma experiência muito agradável que só me trouxe benefícios. Agora
eu sabia exatamente qual era a necessidade dele. O &lt;em&gt;Scrum&lt;/em&gt; me
possibilitou isso removendo pilhas de documentos e processos do caminho,
mostrando que para você entender qual é o problema do cliente é
necessário comunicação.&lt;/p&gt;
&lt;h2&gt;Foco garante agilidade&lt;/h2&gt;
&lt;p&gt;&lt;img class="align-left" src="/images/blog/scrum-iteration.png" width="120" height="120" title="Iterações de projetos Scrum" alt="Iterações de projetos Scrum"&gt;&lt;/p&gt;
&lt;p&gt;Sabendo exatamente qual era a necessidade do cliente, foi possível determinar
o que era mais importante para o mesmo. O modelo de desenvolvimento iterativo
permite que os desenvolvedores de &lt;em&gt;software&lt;/em&gt; possam entregar &lt;strong&gt;pequenas partes usáveis&lt;/strong&gt;
de seu sistema para o cliente. Através de pequenas tarefas priorizadas pelo próprio,
podemos gerar valor mesmo durante o processo de desenvolvimento (ao
contrário do modelo cascata onde a aplicação só irá gerar valor ao
término do desenvolvimento).&lt;/p&gt;
&lt;p&gt;O modelo de pequenas entregas trouxe algumas vantagens para o meu
ambiente de trabalho:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Escopo bem definido:&lt;/strong&gt; Nos preocupávamos com pequenos grupos de
  funcionalidades por vez, garantindo um foco no que realmente
  importava ao cliente naquela etapa de desenvolvimento do projeto.
  Com as propostas do &lt;em&gt;Scrum&lt;/em&gt; para gerência de estórias, o
  conhecimento era sempre explícito (ou seja, todos da equipe sabem
  exatamente o que deve ser feito);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flexibilidade:&lt;/strong&gt; Em um pequeno projeto, percebi que a maneira
  determinada inicialmente para resolver um problema específico era
  ineficaz. O modelo iterativo me permitiu mudar o andamento do
  desenvolvimento (através da utilização do &lt;em&gt;Backlog&lt;/em&gt; e de &lt;em&gt;Sprint
  Plannings&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Qualidade acima de tudo:&lt;/strong&gt; Com os &lt;em&gt;feedbacks&lt;/em&gt; rápidos foi possível
  captar o sentimento do cliente em relação ao projeto. Com ele
  próximo a equipe fica muito mais fácil negociar escopo e garantir
  qualidade. Já li em alguns lugares que muitas vezes o fim do prazo
  do projeto não fora atingido mas o cliente já estava totalmente
  feliz com a solução… na verdade o cliente só vai saber o que quer
  quando mostrarmos algo a ele.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conhecendo o escopo, tendo uma equipe “sincronizada”, tendo o poder de
negociar escopo e coletando &lt;em&gt;feedbacks&lt;/em&gt; rápidos do cliente; além de
&lt;strong&gt;qualidade&lt;/strong&gt; ganhamos o que falta no modelo tradicional de
desenvolvimento de &lt;em&gt;software&lt;/em&gt;: &lt;strong&gt;agilidade&lt;/strong&gt;. Esta me permitiu entregar
o escopo prometido (e negociado durante o desenvolvimento) dentro do
prazo prometido (que influenciou diretamente na negociação do escopo)
sem denegrir qualidade.&lt;/p&gt;
&lt;p&gt;O cliente ganha, o desenvolvedor ganha e as famílias dos desenvolvedores
também ganham =D&lt;/p&gt;
&lt;h2&gt;Considerações finais&lt;/h2&gt;
&lt;p&gt;Se você achou o &lt;em&gt;Scrum&lt;/em&gt; burocrático demais para a sua empresa (garanto
que terão pessoas que o acharão), recomendo a leitura do &lt;em&gt;e-Book&lt;/em&gt;
“&lt;a href="http://gettingreal.37signals.com/GR_por.php" title="Leia "&gt;&lt;em&gt;Getting Real&lt;/em&gt;&lt;/a&gt;” do pessoal da &lt;a href="http://37signals.com/" title="Os produtos da 37Signals são referências para todas as Startups de tecnologia"&gt;&lt;em&gt;37 Signals&lt;/em&gt;&lt;/a&gt;.
Já para aqueles que acharam o &lt;em&gt;Scrum&lt;/em&gt; “anárquico” demais, recomendo conhecer a &lt;a href="http://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_extrema" title="Leia mais sobre eXtreme Programming no Wikipedia"&gt;&lt;em&gt;eXtreme
Programming&lt;/em&gt;&lt;/a&gt; (&lt;a href="http://improveit.com.br/xp" title="Uma documentação muito rica sobre XP"&gt;este artigo da &lt;em&gt;ImproveIT&lt;/em&gt; está sensacional!&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Não acho o &lt;em&gt;agile&lt;/em&gt; uma solução ”bala de prata”. Acredito que os
processos devam ser moldados de acordo com a realidade de cada
instituição. Mas tenha em mente, este conceito de “fábrica de &lt;em&gt;Software&lt;/em&gt;”
já perdeu muito do seu prestígio, e hoje quase virou sinônimo de
“projetos atrasados”.&lt;/p&gt;
&lt;p&gt;Para mim funcionou muito bem, mesmo depois de fechar a minha empresa
(não foi culpa do &lt;em&gt;Scrum&lt;/em&gt; (: ) e aplicar estes conceitos em meus
projetos &lt;em&gt;freelancer&lt;/em&gt;.&lt;/p&gt;</content><category term="agile"></category><category term="scrum"></category><category term="gerencia-de-projetos"></category></entry></feed>