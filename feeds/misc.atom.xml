<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Klaus Laube - misc</title><link href="https://klauslaube.com.br/" rel="alternate"></link><link href="https://klauslaube.com.br/feeds/misc.atom.xml" rel="self"></link><id>https://klauslaube.com.br/</id><updated>2017-09-16T00:15:00-03:00</updated><subtitle>Python, Django e desenvolvimento Web</subtitle><entry><title>Documentando a sua API com raml2html</title><link href="https://klauslaube.com.br/2017/09/16/documentando-sua-api-com-raml2html.html" rel="alternate"></link><published>2017-09-16T00:15:00-03:00</published><updated>2017-09-16T00:15:00-03:00</updated><author><name>Klaus Peter Laube</name></author><id>tag:klauslaube.com.br,2017-09-16:/2017/09/16/documentando-sua-api-com-raml2html.html</id><summary type="html">&lt;p&gt;Uma das coisas mais legais em relação ao &lt;a href="https://klauslaube.com.br/tag/raml.html" title="Leia mais sobre RAML"&gt;&lt;em&gt;RAML&lt;/em&gt;&lt;/a&gt;
(e afins) é a diversidade de ferramentas que existem em seu ecossistema.
Embora a especificação por si cumpra o seu papel, são elas que trazem
"mais cores" aos resultados práticos de ter uma &lt;em&gt;spec&lt;/em&gt; para a sua &lt;a href="https://klauslaube.com.br/tag/apis.html" title="Leia mais sobre API"&gt;&lt;em&gt;API&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;No universo do …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Uma das coisas mais legais em relação ao &lt;a href="https://klauslaube.com.br/tag/raml.html" title="Leia mais sobre RAML"&gt;&lt;em&gt;RAML&lt;/em&gt;&lt;/a&gt;
(e afins) é a diversidade de ferramentas que existem em seu ecossistema.
Embora a especificação por si cumpra o seu papel, são elas que trazem
"mais cores" aos resultados práticos de ter uma &lt;em&gt;spec&lt;/em&gt; para a sua &lt;a href="https://klauslaube.com.br/tag/apis.html" title="Leia mais sobre API"&gt;&lt;em&gt;API&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;No universo do &lt;em&gt;RAML&lt;/em&gt;, existe algumas boas ferramentas que geram documentação a partir da especificação.
Soluções que vão do &lt;a href="https://github.com/spotify/ramlfications" title="Conheça o Ramlfications"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/jhitchcock/raml2wiki" title="Conheça o raml2wiki"&gt;&lt;em&gt;Wikis&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/QuickenLoans/RAMLsharp" title="Leia mais sobre o RAMLsharp"&gt;&lt;em&gt;ASP.net&lt;/em&gt;&lt;/a&gt; e até ao
&lt;a href="https://github.com/isaacloud/sdk-gen" title="Gere SDKs usando RAML"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt;. Mas acredito
que a ferramenta mais atual seja o
&lt;a href="https://github.com/raml2html/raml2html" title="RAML to HTML documentation generator"&gt;&lt;em&gt;raml2html&lt;/em&gt;&lt;/a&gt;,
feito em &lt;a href="https://klauslaube.com.br/tag/nodejs.html" title="Leia mais sobre Node.js"&gt;&lt;em&gt;Node.js&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Simples, como as melhores coisas da vida&lt;/h2&gt;
&lt;p&gt;O &lt;a href="https://github.com/raml2html/raml2html" title="RAML to HTML documentation generator"&gt;&lt;em&gt;raml2html&lt;/em&gt;&lt;/a&gt;
é uma biblioteca que transforma &lt;em&gt;specs&lt;/em&gt; &lt;em&gt;RAML&lt;/em&gt; em &lt;a href="https://klauslaube.com.br/tag/html.html" title="Leia mais sobre HTML"&gt;&lt;em&gt;HTML&lt;/em&gt;&lt;/a&gt;.
E o mais legal é que a sua versão 4 suporta a versão 1.0 da linguagem.&lt;/p&gt;
&lt;p&gt;&lt;img class="align-center-keep-size" src="/images/blog/poesia-vogon.jpg" width="600" height="344" title="Aguenta mais um pouco dessa poesia Vogon (imagilendo.wordpress.com)" alt="Aguenta mais um pouco dessa poesia Vogon (imagilendo.wordpress.com)"&gt;&lt;/p&gt;
&lt;p&gt;Vamos aproveitar o "mini IMDB" construído no
&lt;a href="https://klauslaube.com.br/2017/01/31/ramilificando-as-suas-apis.html" title="Ramilificando as suas APIs"&gt;&lt;em&gt;post&lt;/em&gt; de &lt;em&gt;RAML&lt;/em&gt;&lt;/a&gt;, para
ilustrar como essa ferramenta funciona. Mas antes, aquele &lt;code&gt;npm install&lt;/code&gt; clássico:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ npm i -g raml2html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora é só chamar o utilitário de linha de comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ raml2html api.raml &amp;gt; index.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pronto! Basta abrir o arquivo no seu navegador favorito:&lt;/p&gt;
&lt;p&gt;&lt;img class="align-center-keep-size" src="/images/blog/raml2html-example.png" width="640" height="415" title="Exemplo de documentação RAML" alt="Exemplo de documentação RAML"&gt;&lt;/p&gt;
&lt;p&gt;Simples, não? Calma que ainda não acabou! Existe a possibilidade de utilizar temas juntamente com o &lt;code&gt;raml2html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ npm i -g raml2html-markdown-theme
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora basta passar o tema na hora de gerar a documentação:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ raml2html --theme raml2html-markdown-theme api.raml &amp;gt; index.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sem dúvida, um dos templates mais legais que temos disponível é o &lt;code&gt;raml2html-slate-theme&lt;/code&gt;.
Completo, e baseado no próprio
&lt;a href="https://github.com/lord/slate" title="Beautiful static documentation for your API"&gt;&lt;em&gt;Slate&lt;/em&gt;&lt;/a&gt;,
famosa ferramenta para criação de documentação de &lt;em&gt;APIs&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class="align-center-keep-size" src="/images/blog/raml2html-example-2.png" width="640" height="341" title="Exemplo de documentação RAML" alt="Exemplo de documentação RAML"&gt;&lt;/p&gt;
&lt;p&gt;Você pode criar o seu próprio template! Eles são escritos utilizando o
&lt;a href="https://mozilla.github.io/nunjucks/" title="A rich and powerful templating language for JavaScript."&gt;&lt;em&gt;Nunjucks&lt;/em&gt;&lt;/a&gt;,
linguagem de templates &lt;a href="https://klauslaube.com.br/tag/javascript.html" title="Leia mais sobre Javascript"&gt;&lt;em&gt;Javascript&lt;/em&gt;&lt;/a&gt; da &lt;em&gt;Mozilla&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Considerações finais&lt;/h2&gt;
&lt;p&gt;O &lt;em&gt;post&lt;/em&gt; de hoje foi uma dica rápida e rasteira.&lt;/p&gt;
&lt;p&gt;A partir do momento que você pratica o
&lt;a href="https://swaggerhub.com/blog/api-design/design-first-or-code-first-api-development/" title="Design First or Code First: What’s the Best Approach to API Development?"&gt;&lt;em&gt;design first&lt;/em&gt;&lt;/a&gt;,
ter uma especificação &lt;em&gt;RAML&lt;/em&gt; como "single source of truth" é um caminho no mínimo razoável.
Com isso, gerar documentações através de ferramentas como a apresentada nesse artigo torna-se
algo rápido e prático.&lt;/p&gt;
&lt;p&gt;Até a próxima!&lt;/p&gt;</content><category term="desenvolvimento"></category><category term="web"></category><category term="rest"></category><category term="apis"></category><category term="raml"></category><category term="nodejs"></category></entry></feed>