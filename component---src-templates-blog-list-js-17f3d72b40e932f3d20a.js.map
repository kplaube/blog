{"version":3,"sources":["webpack:///./src/components/avatar.js","webpack:///./node_modules/@styled-icons/boxicons-logos/LinkedinSquare/LinkedinSquare.esm.js","webpack:///./node_modules/@styled-icons/boxicons-logos/Github/Github.esm.js","webpack:///./node_modules/@styled-icons/boxicons-logos/MediumSquare/MediumSquare.esm.js","webpack:///./src/components/author.js","webpack:///./src/templates/blog-list.js"],"names":["styled","img","LinkedinSquare","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","d","key","displayName","Github","fillRule","clipRule","MediumSquare","BaseIconStyles","css","textColor","GithubGrey","LinkedinGrey","MediumGrey","Author","div","devices","tablet","Headline","Text","Name","Title","Social","StyledAvatar","Avatar","github","gravatar","linkedin","medium","name","src","alt","href","query","BlogList","data","edges","allMarkdownRemark","site","siteMetadata","author","description","pageContext","currentPage","numPages","title","meta","content","property","map","node","fields","slug","prefix"],"mappings":"2FAAA,gBAEeA,QAAOC,IAAtB,4DAAeD,CAAf,0B,kCCFA,0EAGWE,EAAiB,cAAiB,SAAUC,EAAOC,GAK5D,OAAO,gBAAoB,IAAgB,YAAS,CAClDC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,aACZJ,EAAO,CACRC,IAAKA,IACH,gBAAoB,OAAQ,CAC9BI,EAAG,yWACHC,IAAK,WAGTP,EAAeQ,YAAc,kB,wJChBlBC,EAAS,cAAiB,SAAUR,EAAOC,GAKpD,OAAO,gBAAoB,IAAgB,YAAS,CAClDC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,aACZJ,EAAO,CACRC,IAAKA,IACH,gBAAoB,OAAQ,CAC9BQ,SAAU,UACVJ,EAAG,wvBACHK,SAAU,UACVJ,IAAK,WAGTE,EAAOD,YAAc,SACd,I,YCnBII,EAAe,cAAiB,SAAUX,EAAOC,GAK1D,OAAO,gBAAoB,IAAgB,YAAS,CAClDC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,aACZJ,EAAO,CACRC,IAAKA,IACH,gBAAoB,OAAQ,CAC9BI,EAAG,maACHC,IAAK,WAGTK,EAAaJ,YAAc,eACpB,I,4DCVDK,EAAiBC,YAAH,0BACTC,KAILC,EAAalB,YAAOW,GAAV,wEAAGX,CAAH,SACZe,GAGEI,EAAenB,YAAOE,KAAV,0EAAGF,CAAH,SACde,GAGEK,EAAapB,YAAOc,GAAV,wEAAGd,CAAH,SACZe,GAGEM,EAASrB,IAAOsB,IAAV,oEAAGtB,CAAH,uFAGDuB,IAAQC,QAObC,EAAWzB,YAAO0B,KAAV,sEAAG1B,CAAH,8BACHiB,KAILU,EAAO3B,YAAO4B,KAAV,kEAAG5B,CAAH,qBAIJ6B,EAAS7B,IAAOsB,IAAV,oEAAGtB,CAAH,kEAUN8B,EAAe9B,YAAO+B,KAAV,0EAAG/B,CAAH,6EAKPuB,IAAQC,QAKJ,kBAAGQ,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,KAAvC,OACb,kBAACf,EAAD,KACE,kBAACS,EAAD,CAAcO,IAAKJ,EAAUK,IAAI,WACjC,6BACE,kBAACX,EAAD,KAAOS,GACP,kBAACX,EAAD,2DACA,kBAACI,EAAD,KACE,uBAAGU,KAAMP,GACP,kBAACd,EAAD,OAEF,uBAAGqB,KAAML,GACP,kBAACf,EAAD,OAEF,uBAAGoB,KAAMJ,GACP,kBAACf,EAAD,W,gDC7BGoB,GAFEC,UAxCE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAFR,IAGbE,KACEC,aAAgBC,EAJL,EAIKA,OAAQC,EAJb,EAIaA,YAJb,IAOfC,YAAeC,EAPA,EAOAA,YAAaC,EAPb,EAOaA,SAPb,OASf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOJ,EACPK,KAAM,CACJ,CACEjB,KAAM,WACNkB,QAAS,CAAC,sBAAuB,SAAU,WAE7C,CACEC,SAAS,WACTD,QAASP,EAAOd,aAKtB,kBAAC,IAAD,KACE,kBAAC,EAAWc,GAEXJ,EAAMa,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CAAShD,IAAKgD,EAAKC,OAAOC,KAAMF,KAAMA,OAGxC,kBAAC,IAAD,CACEP,YAAaA,EACbC,SAAUA,EACVS,OAAO,aAQG","file":"component---src-templates-blog-list-js-17f3d72b40e932f3d20a.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.img`\n  border-radius: 60px;\n`;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var LinkedinSquare = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M20 3H4a1 1 0 00-1 1v16a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1zM8.339 18.337H5.667v-8.59h2.672v8.59zM7.003 8.574a1.548 1.548 0 110-3.096 1.548 1.548 0 010 3.096zm11.335 9.763h-2.669V14.16c0-.996-.018-2.277-1.388-2.277-1.39 0-1.601 1.086-1.601 2.207v4.248h-2.667v-8.59h2.56v1.174h.037c.355-.675 1.227-1.387 2.524-1.387 2.704 0 3.203 1.778 3.203 4.092v4.71z\",\n    key: \"k0\"\n  }));\n});\nLinkedinSquare.displayName = 'LinkedinSquare';\nexport var LinkedinSquareDimensions = {\n  height: 24,\n  width: 24\n};","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Github = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 012.496-.336 9.554 9.554 0 012.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z\",\n    clipRule: \"evenodd\",\n    key: \"k0\"\n  }));\n});\nGithub.displayName = 'Github';\nexport var GithubDimensions = {\n  height: 24,\n  width: 24\n};","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var MediumSquare = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M20 3H4a1 1 0 00-1 1v16a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1zm-2.046 4.265l-.966.925a.28.28 0 00-.106.271v6.801a.28.28 0 00.106.271l.942.926v.204h-4.741v-.204l.977-.948c.097-.096.097-.125.097-.271V9.742l-2.716 6.896h-.368L8.018 9.742v4.622a.644.644 0 00.176.531l1.271 1.541v.203H5.861v-.203l1.271-1.541a.618.618 0 00.164-.531V9.02a.468.468 0 00-.152-.395l-1.13-1.36v-.203H9.52l2.71 5.943 2.382-5.943h3.343v.203z\",\n    key: \"k0\"\n  }));\n});\nMediumSquare.displayName = 'MediumSquare';\nexport var MediumSquareDimensions = {\n  height: 24,\n  width: 24\n};","import { Github } from \"@styled-icons/boxicons-logos/Github\";\nimport { LinkedinSquare } from \"@styled-icons/boxicons-logos/LinkedinSquare\";\nimport { MediumSquare } from \"@styled-icons/boxicons-logos/MediumSquare\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Avatar from \"./avatar\";\nimport { textColor } from \"./color\";\nimport { devices } from \"./helpers\";\nimport { Text, Title } from \"./typograph\";\n\nconst BaseIconStyles = css`\n  color: ${textColor};\n  width: 22px;\n`;\n\nconst GithubGrey = styled(Github)`\n  ${BaseIconStyles};\n`;\n\nconst LinkedinGrey = styled(LinkedinSquare)`\n  ${BaseIconStyles};\n`;\n\nconst MediumGrey = styled(MediumSquare)`\n  ${BaseIconStyles};\n`;\n\nconst Author = styled.div`\n  margin-bottom: 48px;\n\n  @media ${devices.tablet} {\n    align-items: center;\n    display: flex;\n    margin-bottom: 56px;\n  }\n`;\n\nconst Headline = styled(Text)`\n  color: ${textColor};\n  display: inline;\n`;\n\nconst Name = styled(Title)`\n  font-size: 28px;\n`;\n\nconst Social = styled.div`\n  float: right;\n  margin: 0 0 0 16px;\n  padding: 0 4px;\n\n  a {\n    margin: 0 4px;\n  }\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  height: 80px;\n  margin-bottom: 20px;\n  width: 80px;\n\n  @media ${devices.tablet} {\n    margin: 0 24px 0 0;\n  }\n`;\n\nexport default ({ github, gravatar, linkedin, medium, name }) => (\n  <Author>\n    <StyledAvatar src={gravatar} alt=\"Avatar\" />\n    <div>\n      <Name>{name}</Name>\n      <Headline>Desenvolvedor web, apaixonado por Python e Django.</Headline>\n      <Social>\n        <a href={github}>\n          <GithubGrey />\n        </a>\n        <a href={linkedin}>\n          <LinkedinGrey />\n        </a>\n        <a href={medium}>\n          <MediumGrey />\n        </a>\n      </Social>\n    </div>\n  </Author>\n);\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Summary from \"../components/article-summary\";\nimport Author from \"../components/author\";\nimport Container from \"../components/container\";\nimport Layout from \"../components/layout\";\nimport Pagination from \"../components/pagination\";\nimport SEO from \"../components/seo\";\n\nconst BlogList = ({\n  data: {\n    allMarkdownRemark: { edges },\n    site: {\n      siteMetadata: { author, description },\n    },\n  },\n  pageContext: { currentPage, numPages },\n}) => (\n  <Layout>\n    <SEO\n      title={description}\n      meta={[\n        {\n          name: \"keywords\",\n          content: [\"desenvolvimento-web\", \"python\", \"django\"],\n        },\n        {\n          property: `og:image`,\n          content: author.gravatar,\n        },\n      ]}\n    />\n\n    <Container>\n      <Author {...author} />\n\n      {edges.map(({ node }) => (\n        <Summary key={node.fields.slug} node={node} />\n      ))}\n\n      <Pagination\n        currentPage={currentPage}\n        numPages={numPages}\n        prefix=\"index\"\n      />\n    </Container>\n  </Layout>\n);\n\nexport default BlogList;\n\nexport const query = graphql`\n  query ListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n          excerpt(pruneLength: 125)\n          fields {\n            readingTime {\n              minutes\n            }\n            slug\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author {\n          github\n          gravatar\n          linkedin\n          medium\n          name\n        }\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}